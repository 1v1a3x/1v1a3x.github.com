<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Presentation | 4LiF3h4x0r5]]></title>
  <link href="http://darkusha.com/blog/categories/presentation/atom.xml" rel="self"/>
  <link href="http://darkusha.com/"/>
  <updated>2018-08-02T13:02:16+00:00</updated>
  <id>http://darkusha.com/</id>
  <author>
    <name><![CDATA[Denys Arkusha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Embedding HTML5 Video in Reveal.JS Presentation]]></title>
    <link href="http://darkusha.com/blog/2016/01/27/html5-video-in-reveal-dot-js-presentation/"/>
    <updated>2016-01-27T08:50:34+00:00</updated>
    <id>http://darkusha.com/blog/2016/01/27/html5-video-in-reveal-dot-js-presentation</id>
    <content type="html"><![CDATA[<p>Some time ago I was talking to my friend Mairbek (<a href="https://github.com/mairbek">@mairbek</a>) about possible ways to make good and creative presentations.
He advise me with the following solution that have been already tried out as a simple and lightweight HTML-framework with simple configuration,
PDF-export, rich CSS and JS transformations etc. developed by one talented person <a href="https://github.com/hakimel">@hakimel</a> - (<a href="https://github.com/hakimel/reveal.js">https://github.com/hakimel/reveal.js</a>)</p>

<p>So, the decision was to use this framework for my presentation and I was really happy till I&rsquo;ve faced a little problem that
confused me in scope of my task &ldquo;to make the presentation more creative&rdquo; :).
In fact I didn&rsquo;t find an ability to insert and operate with video and spending some time on research I found a little workaround to make it possible
for me without spending of extra-time to dive into the framework logic.
I&rsquo;ve just added dependency to JQuery and add two auxiliary functions into my presentation body to have make some magic to control my HTML5 video inside.</p>

<pre><code class="html">...
&lt;head&gt;
...
    &lt;script src="http://code.jquery.com/jquery-1.4.2.min.js"&gt;&lt;/script&gt;
    &lt;script&gt;

    // This function start playing the video with id from current slide,
    // toggles it to the FullScreen mode and fires the CancelFullScreen()
    // at the end of the video.
    function toggleFullScreen(id) {
        var videoElement = document.getElementById(id);
        $("#"+id).bind('ended', function(){ document.webkitCancelFullScreen(); });
        videoElement.play();
        videoElement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
    }

    // This part is to add a listener for &lt;Enter&gt; key and to call toggleFullScreen()
    // function with the video ID that is dynamically obtained from the CURRENTLY displayed slide.
    document.addEventListener("keydown", function(e) {
        if (e.keyCode == 13) {
            toggleFullScreen($('.present').find('video').attr('id'));
        }
    }, false);

        &lt;/script&gt;
...
</code></pre>

<h2>Including the HTML5 video into <a href="https://github.com/hakimel/reveal.js">Reveal.js</a></h2>

<p>So, at this point I was able to include something like that and control the video start by hitting the <strong><Enter></strong> key.</p>

<p>&#8220;`html
&hellip;</p>

<p><div class="reveal">
  <div class="slides">
    <section>
    <video id="myvideo" src="video/test.ogv" type="video/ogg" style="heigth: 50%; width: 50%;" />
    </section>
&hellip;
&#8220;`</p>

<p>You can download the demo zip-file <a href="reveal/reveal.js_with_video.zip">here</a> and open the <strong>&lsquo;index.html&rsquo;</strong> after unpacking.<br/>
<em>(12Mb with sample video)</em></p>

<p>Or you can just click <a href="http://darkusha.com/images/Record.gif" target="_blank" onclick="wincontrol=window.open('/images/Record.gif','GIF-Demo','resizable=1,status=1,menubar=1,toolbar=1,scrollbars=1,location=1,directories=1,width=690,height=388');return false;">here</a> to see a little GIF-demo.</p>
]]></content>
  </entry>
  
</feed>
